cmake_minimum_required(VERSION 3.25)

set(VCPKG_BOOTSTRAP_OPTIONS "-disableMetrics")
if (UNIX AND NOT APPLE)
    execute_process(COMMAND uname -m COMMAND tr -d '\n' OUTPUT_VARIABLE LINUX_ARCH)
    if (LINUX_ARCH STREQUAL x86_64)
        set(VCPKG_TARGET_TRIPLET "x64-linux-dynamic-release" CACHE STRING "x64-linux-dynamic-release triplet" FORCE)
    elseif (LINUX_ARCH STREQUAL aarch64)
        set(VCPKG_TARGET_TRIPLET "arm64-linux-dynamic-release" CACHE STRING "arm64-linux-dynamic-release triplet" FORCE)
    endif ()
elseif (APPLE)
    execute_process(COMMAND uname -m COMMAND tr -d '\n' OUTPUT_VARIABLE OSX_ARCH)
    if (OSX_ARCH STREQUAL x86_64)
        set(VCPKG_TARGET_TRIPLET "x64-osx-dynamic-release" CACHE STRING "x64-osx-dynamic-release triplet" FORCE)
    elseif (OSX_ARCH STREQUAL "arm64")
        set(VCPKG_TARGET_TRIPLET "arm64-osx-dynamic-release" CACHE STRING "arm64-osx-dynamic-release triplet" FORCE)
    endif ()
elseif (WIN32)
    set(VCPKG_TARGET_TRIPLET "x64-windows-dynamic-release" CACHE STRING "x64-windows-dynamic-release triplet" FORCE)
endif ()
if (NOT VCPKG_TARGET_TRIPLET)
    message(FATAL_ERROR "VCPKG_TARGET_TRIPLET not set!!!")
endif ()
message(STATUS "VCPKG_TARGET_TRIPLET: ${VCPKG_TARGET_TRIPLET}")
set(VCPKG_CMAKE_FILE "${CMAKE_CURRENT_SOURCE_DIR}/third-party/vcpkg/scripts/buildsystems/vcpkg.cmake")

if (NOT EXISTS "${VCPKG_CMAKE_FILE}")
    message(FATAL_ERROR "${VCPKG_CMAKE_FILE} not found, please make sure that you have executed `git submodule init && git submodule update`")
endif ()

set(CMAKE_TOOLCHAIN_FILE "${VCPKG_CMAKE_FILE}" CACHE STRING "Vcpkg toolchain file")

project(learn_autonomous)

enable_testing()

set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_STANDARD 20)

set(CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/cmake)
include(compiler_options)
include(doctest)
include(dump_cmake_variables)
include(find_vcpkg_packages)
include(find_system_packages)

include(options)
add_subdirectory(src)

dump_cmake_variables()
